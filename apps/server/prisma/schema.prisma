generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum CandidateStatus {
  HIRED
  PENDING
  REJECTED
  IN_PROGRESS
}

enum InterviewStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
  RESCHEDULED
}

enum InterviewMode {
  IN_PERSON
  VIRTUAL
  PHONE
}

enum InterviewResult {
  PASSED
  FAILED
  ON_HOLD
  NOT_EVALUATED
}

// Candidate Model
model Candidate {
  id        String          @id @default(uuid())
  firstName String
  lastName  String
  email     String          @unique
  phone     String
  dob       DateTime
  address   String
  status    CandidateStatus @default(PENDING)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt

  interviews Interview[] // Relationship with Interview table
}

// Interview Model
model Interview {
  id              String          @id @default(uuid())
  candidateId     String
  scheduledAt     DateTime
  status          InterviewStatus @default(SCHEDULED) // Uses enum
  mode            InterviewMode
  location        String?
  duration        Int?
  feedback        String?
  score           Float?
  result          InterviewResult @default(NOT_EVALUATED)
  rescheduleCount Int             @default(0)
  rescheduledAt   DateTime?
  panelMembers    Json?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  candidate Candidate @relation(fields: [candidateId], references: [id])
}
